{"version":3,"sources":["components/rightSideBar/RightSideBar.module.scss","redux/user/user-selectors.js","components/rightSideBar/RightSideBar.js","pages/diaryPage/DiaryPage.module.scss","components/diaryAddProductForm/DiaryAddProductForm.module.scss","redux/daily/daily-operations.js","components/diaryAddProductForm/DiaryAddProductForm.js","components/diaryDateСalendar/DiaryDateСalendar.js","pages/diaryPage/DiaryPage.js"],"names":["module","exports","selectors","getDailyRate","state","user","userData","dailyRate","getNotAllowedProducts","notAllowedProducts","getDate","date","RightSideBar","useSelector","dailyRateSelector","className","style","sideBarContainer","characteristicBox","sideBarTitle","sideBarList","sideBarItem","sideBarItem_text","sideBarItem_span","notAllowedProductsBox","notAllowedProductsTitle","slice","join","axios","defaults","baseURL","token","headers","common","Authorization","fetchDayInfo","createAsyncThunk","credentials","a","rejectWithValue","getState","console","log","accessToken","auth","post","data","message","operations","DiaryAddProductForm","diaryProductForm","onSubmit","e","preventDefault","productInput","type","placeholder","list","id","value","weightInput","diaryProductFormBtn","DiaryDateСalendar","selectDate","useState","Date","startDate","setStartDate","customeDate","moment","format","selected","onChange","DiaryPage","dispatch","useDispatch","setDate","useEffect","dailyOperations","diaryPageWraper"],"mappings":"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","file":"static/js/6.b0c473dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideBarContainer\":\"RightSideBar_sideBarContainer__37FUp\",\"characteristicBox\":\"RightSideBar_characteristicBox__BSdWu\",\"sideBarTitle\":\"RightSideBar_sideBarTitle__32LG8\",\"sideBarList\":\"RightSideBar_sideBarList__20sWt\",\"sideBarItem\":\"RightSideBar_sideBarItem__3r4GA\",\"sideBarItem_text\":\"RightSideBar_sideBarItem_text__35MAV\",\"notAllowedProductsTitle\":\"RightSideBar_notAllowedProductsTitle___7XWM\",\"notAllowedProductsBox\":\"RightSideBar_notAllowedProductsBox__2sLXr\"};","// const getDailyRate = (state, date) => state.user.userData.dailyRate.filter(item => item.date === date);\nconst getDailyRate = (state) => state.user.userData.dailyRate;\nconst getNotAllowedProducts = state => state.user.userData.notAllowedProducts;\nconst getDate = state => state.user.date;\n\nconst selectors = {\n    getDailyRate,\n    getNotAllowedProducts,\n    getDate,\n}\n\nexport default selectors;","import React from \"react\";\nimport style from \"./RightSideBar.module.scss\";\nimport {useSelector} from \"react-redux\";\nimport {dailyRateSelector} from \"../../redux/user\";\n\nconst RightSideBar = ({date}) => {\n    const dailyRate = useSelector((state) =>dailyRateSelector.getDailyRate(state, date));\n    // const date = useSelector(dailyRateSelector.getDate);\n    const notAllowedProducts = useSelector(dailyRateSelector.getNotAllowedProducts);\n\n    return (\n        <div className={style.sideBarContainer}>\n            <div className={style.characteristicBox}>\n                <p className={style.sideBarTitle}>Сводка за {date}</p>\n                <ul className={style.sideBarList}>\n                    <li className={style.sideBarItem}>\n                        <p className={style.sideBarItem_text}>\n                            Осталось\n                            <span className={style.sideBarItem_span}>0000 ккал</span>\n                        </p>\n                    </li>\n                    <li className={style.sideBarItem}>\n                        <p className={style.sideBarItem_text}>\n                            Употреблено\n                            <span className={style.sideBarItem_span}>\n                0000 ккал\n              </span>\n                        </p>\n                    </li>\n                    <li className={style.sideBarItem}>\n                        <p className={style.sideBarItem_text}>\n                            Дневная норма\n                            <span className={style.sideBarItem_span}>\n                {dailyRate} ккал\n              </span>\n                        </p>\n                    </li>\n                    <li className={style.sideBarItem}>\n                        <p className={style.sideBarItem_text}>\n                            n% от нормы\n                            <span className={style.sideBarItem_span}>\n                0000 ккал\n              </span>\n                        </p>\n                    </li>\n                </ul>\n            </div>\n\n            <div className={style.notAllowedProductsBox}>\n                <p className={style.notAllowedProductsTitle}>\n                    Нерекомендуемые продукты\n                </p>\n                <p>{notAllowedProducts.slice(0, 5).join(\", \")}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default RightSideBar;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"diaryPageWraper\":\"DiaryPage_diaryPageWraper__1ME2x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"diaryProductForm\":\"DiaryAddProductForm_diaryProductForm__20I7-\",\"productInput\":\"DiaryAddProductForm_productInput__2N5uv\",\"weightInput\":\"DiaryAddProductForm_weightInput__20C4F\",\"diaryProductFormBtn\":\"DiaryAddProductForm_diaryProductFormBtn__PMadu\"};","import axios from \"axios\";\nimport {createAsyncThunk} from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = \"https://slimmom-backend.goit.global\";\n\nconst token = {\n    set(token) {\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n    },\n    unset() {\n        axios.defaults.headers.common.Authorization = \"\";\n    },\n};\n\n\nconst fetchDayInfo = createAsyncThunk(\n    \"day/info\",\n    async (credentials, {rejectWithValue,getState}) => {\n        console.log(credentials)\n        const state = getState();\n        const accessToken = state.auth.accessToken;\n        try {\n            const {data} = await axios.post(\"/day/info\", credentials);\n            token.set(accessToken);\n            console.log(data)\n            return data;\n        } catch (error) {\n            return rejectWithValue(error.message);\n        }\n    }\n);\n\nconst operations = {\n    fetchDayInfo,\n}\n\nexport default operations;\n\n","import React from \"react\";\nimport style from \"./DiaryAddProductForm.module.scss\";\nconst DiaryAddProductForm = () => {\n  const onHandleSubmit = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <form className={style.diaryProductForm} onSubmit={onHandleSubmit}>\n      <label>\n        <input\n          className={style.productInput}\n          type=\"text\"\n          placeholder=\"Введите название продукта\"\n          list=\"produsts\"\n        />\n      </label>\n      <datalist id=\"produsts\">\n        <option value=\"Chocolate\" />\n        <option value=\"Coconut\" />\n        <option value=\"Mint\" />\n        <option value=\"Strawberry\" />\n        <option value=\"Vanilla\" />\n      </datalist>\n      {/* <datalist>\n        {products.map((product) => (\n          <option value=\"\"></option>\n        ))}\n      </datalist> */}\n      <label>\n        <input className={style.weightInput} type=\"text\" placeholder=\"Граммы\" />\n      </label>\n      <button type=\"submit\" className={style.diaryProductFormBtn}>\n        +\n      </button>\n    </form>\n  );\n};\n\nexport default DiaryAddProductForm;\n","import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n// import {dailyOperations} from \"../../redux/daily\";\n// import {useDispatch} from \"react-redux\";\n\nconst DiaryDateСalendar = ({selectDate}) => {\n  const [startDate, setStartDate] = useState(new Date());\n  const customeDate = moment(startDate).format(\"YYYY-MM-DD\");\n  selectDate(customeDate);\n  // selectDate(startDate);\n  // const dispatch = useDispatch();\n  console.log(customeDate);\n\n    // useEffect(() => {\n    //     dispatch(dailyOperations.fetchDayInfo({date: customeDate}))\n    // }, [startDate]);\n\n\n  return (\n    <div>\n      <DatePicker\n        selected={startDate}\n        onChange={(date) => setStartDate(date)}\n      />\n    </div>\n  );\n};\n\nexport default DiaryDateСalendar;\n","import {useEffect, useState} from \"react\";\nimport style from \"./DiaryPage.module.scss\";\nimport {dailyOperations} from \"../../redux/daily\";\nimport DiaryAddProductForm from \"../../components/diaryAddProductForm/DiaryAddProductForm\";\nimport DiaryDateСalendar from \"../../components/diaryDateСalendar/DiaryDateСalendar\";\nimport RightSideBar from \"../../components/rightSideBar/RightSideBar\";\nimport {useDispatch} from \"react-redux\";\n// import axios from \"axios\";\n\n\nexport default function DiaryPage() {\n    const dispatch = useDispatch();\n    const [date, setDate] = useState('')\n    console.log(date)\n\n    useEffect(() => {\n        dispatch(dailyOperations.fetchDayInfo({date: date}))\n        // axios\n        //     .post('https://slimmom-backend.goit.global/day/info', {date: date})\n        //     .then((response) => {\n        //         console.log(response.data);\n        //         console.log('Date------------------------')\n        //     })\n\n    }, [date]);\n\n    return (\n        <div className={style.diaryPageWraper}>\n            <div>\n                <DiaryDateСalendar date={date} selectDate={setDate}/>\n                <DiaryAddProductForm/>\n            </div>\n            <RightSideBar date={date}/>\n        </div>\n    );\n}\n"],"sourceRoot":""}