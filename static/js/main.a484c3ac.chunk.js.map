{"version":3,"sources":["redux/authorization/operations.js","redux/authorization/slice.js","redux/authorization/selectors.js","redux/store.js","routes/PublicRoute.js","routes/PrivateRoute.js","components/authNavigation/AuthNavigation.js","components/navigation/Navigation.js","components/menu/Menu.js","components/header/Header.js","components/App.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","a","username","email","password","rejectWithValue","post","data","accessToken","message","logIn","credentials","logOut","refreshUser","_","getState","state","persistedToken","auth","operations","authSlice","createSlice","name","initialState","user","id","refreshToken","sid","isLoggedIn","todaySummary","userData","isRefreshingUser","error","extraReducers","authOperations","pending","fulfilled","action","payload","rejected","authSelectors","getIsLoggedIn","getUserName","getIsRefreshingUser","authPersistConfig","key","storage","store","configureStore","reducer","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","PublicRoute","children","restricted","redirectTo","routeProps","shouldRedirect","useSelector","to","PrivateRoute","AuthNavigation","className","style","nav","activeClassName","activeNav","exact","Navigation","Menu","dispatch","useDispatch","userWrapper","logBtn","type","onClick","Header","headerWrapper","MainPage","lazy","RegistrationPage","LoginPage","DiaryPage","CalculatorPage","App","useEffect","fallback","path","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.a484c3ac.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = \"https://slimmom-backend.goit.global\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = createAsyncThunk(\n  \"auth/register\",\n  async ({ username, email, password }, { rejectWithValue }) => {\n    try {\n      await axios.post(\"/auth/register\", {\n        username,\n        email,\n        password,\n      });\n      const { data } = await axios.post(\"/auth/login\", {\n        email,\n        password,\n      });\n      token.set(data.accessToken);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nconst logIn = createAsyncThunk(\n  \"auth/login\",\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post(\"/auth/login\", credentials);\n      token.set(data.accessToken);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nconst logOut = createAsyncThunk(\n  \"auth/logout\",\n  async (credentials, { rejectWithValue }) => {\n    try {\n      await axios.post(\"/auth/logout\", credentials);\n      token.unset();\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nconst refreshUser = createAsyncThunk(\n  \"auth/refresh\",\n  async (_, { rejectWithValue, getState }) => {\n    const state = getState();\n    const persistedToken = state.auth.accessToken;\n\n    if (persistedToken === null) {\n      return rejectWithValue();\n    }\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.post(\"/auth/refresh\");\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  refreshUser,\n};\nexport default operations;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport authOperations from \"./operations\";\n\nconst initialState = {\n  user: { username: null, email: null, id: null },\n  accessToken: null,\n  refreshToken: null,\n  sid: null,\n  isLoggedIn: false,\n  todaySummary: null,\n  userData: null,\n  isRefreshingUser: false,\n  error: null,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: {\n    [authOperations.register.pending](state) {\n      state.error = null;\n    },\n    [authOperations.register.fulfilled](state, action) {\n      state.user.username = action.payload.user.username;\n      state.user.email = action.payload.user.email;\n      state.user.id = action.payload.user.id;\n      state.accessToken = action.payload.accessToken;\n      state.refreshToken = action.payload.refreshToken;\n      state.sid = action.payload.sid;\n      state.todaySummary = action.payload.todaySummary;\n      state.userData = action.payload.user.userData;\n      state.isLoggedIn = true;\n    },\n    [authOperations.register.rejected](state, action) {\n      state.error = action.payload;\n    },\n    [authOperations.logIn.pending](state) {\n      state.error = null;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user.username = action.payload.user.username;\n      state.user.email = action.payload.user.email;\n      state.user.id = action.payload.user.id;\n      state.accessToken = action.payload.accessToken;\n      state.refreshToken = action.payload.refreshToken;\n      state.sid = action.payload.sid;\n      state.todaySummary = action.payload.todaySummary;\n      state.userData = action.payload.user.userData;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.rejected](state, action) {\n      state.error = action.payload;\n    },\n    [authOperations.logOut.pending](state) {\n      state.error = null;\n    },\n    [authOperations.logOut.fulfilled](state) {\n      // state = initialState;\n      state.user.username = null;\n      state.user.email = null;\n      state.user.id = null;\n      state.accessToken = null;\n      state.refreshToken = null;\n      state.sid = null;\n      state.todaySummary = null;\n      state.userData = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.logOut.rejected](state, action) {\n      // state = initialState;\n      state.user.username = null;\n      state.user.email = null;\n      state.user.id = null;\n      state.accessToken = null;\n      state.refreshToken = null;\n      state.sid = null;\n      state.todaySummary = null;\n      state.userData = null;\n      state.isLoggedIn = false;\n      state.error = action.payload;\n    },\n    [authOperations.refreshUser.pending](state) {\n      state.isRefreshingUser = true;\n    },\n    [authOperations.refreshUser.fulfilled](state, action) {\n      state.accessToken = action.payload.accessToken;\n      state.refreshToken = action.payload.refreshToken;\n      state.sid = action.payload.sid;\n      state.isLoggedIn = true;\n      state.isRefreshingUser = false;\n    },\n    [authOperations.refreshUser.rejected](state) {\n      state.isRefreshingUser = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","const getIsLoggedIn = (state) => state.auth.isLoggedIn;\n\nconst getUserName = (state) => state.auth.user.username;\n\nconst getIsRefreshingUser = (state) => state.auth.isRefreshingUser;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUserName,\n  getIsRefreshingUser,\n};\n\nexport default authSelectors;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from \"redux-persist\";\n// import logger from \"redux-logger\";\nimport storage from \"redux-persist/lib/storage\";\n// import { contactsReducer } from \"./phonebook\";\nimport { authReducer } from \"./authorization\";\n\nconst middleware = (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n    });\n// .concat(logger);\n\nconst authPersistConfig = {\n    key: \"auth\",\n    storage,\n    // whitelist: [\"user\"],\n};\n\nconst store = configureStore({\n    reducer: {\n        auth: persistReducer(authPersistConfig, authReducer),\n        // contacts: contactsReducer,\n    },\n    middleware,\n    devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { authSelectors } from \"../redux/authorization\";\n\nexport default function PublicRoute({ children, restricted = false, redirectTo = \"/\", ...routeProps }) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return <Route {...routeProps}>{shouldRedirect ? <Redirect to={redirectTo} /> : children}</Route>;\n}\n","import { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { authSelectors } from \"../redux/authorization\";\n\nexport default function PrivateRoute({ children, redirectTo = \"/\", ...routeProps }) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return <Route {...routeProps}>{isLoggedIn ? children : <Redirect to={redirectTo} />}</Route>;\n}\n","import { NavLink } from \"react-router-dom\";\nimport style from \"./AuthNavigation.module.scss\";\n\nconst AuthNavigation = () => {\n  return (\n    <>\n      <NavLink\n        className={style.nav}\n        activeClassName={style.activeNav}\n        to=\"/login\"\n        exact\n      >\n        Вход\n      </NavLink>\n      <NavLink\n        className={style.nav}\n        activeClassName={style.activeNav}\n        to=\"/register\"\n        exact\n      >\n        Регистрация\n      </NavLink>\n    </>\n  );\n};\n\nexport default AuthNavigation;\n","import { useSelector } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { authSelectors } from \"../../redux/authorization\";\nimport style from \"./Navigation.module.scss\";\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <nav>\n      <NavLink\n        className={style.nav}\n        activeClassName={style.activeNav}\n        to=\"/\"\n        exact\n      >\n        Home\n      </NavLink>\n      {isLoggedIn && (\n        <>\n          <NavLink\n            className={style.nav}\n            activeClassName={style.activeNav}\n            to=\"/diary\"\n            exact\n          >\n            Дневник\n          </NavLink>\n          <NavLink\n            className={style.nav}\n            activeClassName={style.activeNav}\n            to=\"/calculator\"\n            exact\n          >\n            Калькулятор\n          </NavLink>\n        </>\n      )}\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { authOperations, authSelectors } from \"../../redux/authorization\";\nimport style from \"./Menu.module.scss\";\n\nconst Menu = () => {\n  const dispatch = useDispatch();\n  // const userName = useSelector(authSelectors.getUserName);\n  const logout = () => {\n    dispatch(authOperations.logOut());\n  };\n  return (\n    <div className={style.userWrapper}>\n      {/* <span className={style.userName}>{userName}</span> */}\n\n      <button className={style.logBtn} type=\"button\" onClick={logout}>\n        logout\n      </button>\n    </div>\n  );\n};\n\nexport default Menu;\n","import { useSelector } from \"react-redux\";\nimport { authSelectors } from \"../../redux/authorization\";\nimport AuthNavigation from \"../authNavigation/AuthNavigation\";\nimport Navigation from \"../navigation/Navigation\";\nimport Menu from \"../menu/Menu\";\nimport style from \"./Header.module.scss\";\n\nexport default function Header() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <header className={style.headerWrapper}>\n      <Navigation /> {isLoggedIn ? <Menu /> : <AuthNavigation />}\n    </header>\n  );\n}\n","import {lazy, Suspense, useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {authSelectors, authOperations} from \"../redux/authorization\";\nimport PublicRoute from \"../routes/PublicRoute\";\nimport PrivateRoute from \"../routes/PrivateRoute\";\nimport {Redirect, Switch} from \"react-router\";\nimport Header from \"./header/Header\";\n// import Loader from \"react-loader-spinner\";\n// import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nconst MainPage = lazy(\n    () =>\n        import(\"../pages/mainPage/MainPage.js\") /*webpackChunkName: 'MainPage' */\n);\nconst RegistrationPage = lazy(\n    () =>\n        import(\n            \"../pages/registrationPage/RegistrationPage.js\"\n            ) /*webpackChunkName: 'RegistrationPage' */\n);\nconst LoginPage = lazy(\n    () =>\n        import(\"../pages/loginPage/LoginPage.js\") /*webpackChunkName: 'LoginPage' */\n);\nconst DiaryPage = lazy(\n    () =>\n        import(\"../pages/diaryPage/DiaryPage.js\") /*webpackChunkName: 'DiaryPage' */\n);\nconst CalculatorPage = lazy(\n    () =>\n        import(\n            \"../pages/calculatorPage/CalculatorPage.js\"\n            ) /*webpackChunkName: 'CalculatorPage' */\n);\n\nexport default function App() {\n    const dispatch = useDispatch();\n    const isRefreshingUser = useSelector(authSelectors.getIsRefreshingUser);\n\n\n    useEffect(() => {\n        // dispatch(authOperations.refreshCurrentUser());\n    }, [dispatch]);\n\n\n    return (\n        !isRefreshingUser && (\n            <>\n                <Header/>\n                <Switch>\n                    <Suspense\n                        fallback={\n                            <div>\n                                loader\n                                {/* <Loader\n                  className=\"Loader\"\n                  type=\"ThreeDots\"\n                  color=\"#00BFFF\"\n                  height={20}\n                  width={100}\n                  timeout={3000}\n                /> */}\n                            </div>\n                        }\n                    >\n                        <PublicRoute exact path=\"/\">\n                            <MainPage/>\n                        </PublicRoute>\n\n                        <PublicRoute path=\"/register\" restricted>\n                            <RegistrationPage/>\n                        </PublicRoute>\n\n                        <PublicRoute path=\"/login\" restricted redirectTo=\"/diary\">\n                            <LoginPage/>\n                        </PublicRoute>\n\n                        <PrivateRoute path=\"/diary\" restricted redirectTo=\"/login\">\n                            <DiaryPage/>\n                        </PrivateRoute>\n\n                        <PrivateRoute path=\"/calculator\" restricted redirectTo=\"/login\">\n                            <CalculatorPage/>\n                        </PrivateRoute>\n                        <Redirect to=\"/\"/>\n                    </Suspense>\n                </Switch>\n            </>\n        )\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <PersistGate loading={<h2>...loading</h2>} persistor={persistor}>\n                <BrowserRouter>\n                    <App />\n                </BrowserRouter>\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}